x-node: &node-common
  depends_on:
    - bootnode
  networks:
    - node-net

services:
  bootnode:
    container_name: bootnode
    build:
      context: .
      dockerfile: ./node.Dockerfile
    command: |
      --nodekeyhex=$BOOTNODEKEY
      --networkid=$NETWORKID
      --netrestrict="172.16.254.0/24"
      --ipcdisable
    networks:
      - node-net

  signer1:
    <<: *node-common
    build:
      context: .
      dockerfile: ./signer.Dockerfile
      args:
        privatekey: $SIGNER1_KEY
        password: $PASSWORD
    container_name: signer1
    command: |
      --bootnodes=$BOOTNODES
      --syncmode="full"
      --password=/.pass
      --unlock=$SIGNER1
      --mine
      --miner.etherbase=$SIGNER1
      --networkid=$NETWORKID
      --netrestrict="172.16.254.0/24"
      --ipcdisable
    volumes:
      - signer1:/root/.ethereum

  signer2:
    <<: *node-common
    build:
      context: .
      dockerfile: ./signer.Dockerfile
      args:
        privatekey: $SIGNER2_KEY
        password: $PASSWORD
    container_name: signer2
    command: |
      --bootnodes=$BOOTNODES
      --syncmode="full"
      --password=/.pass
      --unlock=$SIGNER2
      --mine
      --miner.etherbase=$SIGNER2
      --networkid=$NETWORKID
      --netrestrict="172.16.254.0/24"
      --ipcdisable
    volumes:
      - signer2:/root/.ethereum

  node1:
    <<: *node-common
    build:
      context: .
      dockerfile: ./node.Dockerfile
    container_name: node1-sync
    command: |
      --bootnodes=$BOOTNODES
      --syncmode="full"
      --networkid=$NETWORKID
      --netrestrict="172.16.254.0/24"
      --ipcdisable
    volumes:
      - node1:/root/.ethereum

  node2:
    <<: *node-common
    build:
      context: .
      dockerfile: ./node.Dockerfile
    container_name: node2-rpc
    command: |
      --bootnodes=$BOOTNODES
      --syncmode="full"
      --networkid=$NETWORKID
      --netrestrict="172.16.254.0/24"
      --allow-insecure-unlock
      --http
      --http.addr="0.0.0.0"
      --http.api="admin,eth,net,txpool,debug,personal,web3"
      --http.corsdomain="*"
      --http.vhosts=*
    ports:
      - 8545:8545
    volumes:
      - node2:/root/.ethereum

  explorer-db:
    image: postgres:15.1-alpine
    container_name: explorer-db
    environment:
      - POSTGRES_PASSWORD=$EXPLORER_DB_PASSWORD
    volumes:
      - explorer_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  explorer:
    build:
      context: explorer
      args:
        CACHE_EXCHANGE_RATES_PERIOD: ""
        API_V1_READ_METHODS_DISABLED: "false"
        DISABLE_WEBAPP: "false"
        API_V1_WRITE_METHODS_DISABLED: "false"
        CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED: ""
        CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL: ""
        ADMIN_PANEL_ENABLED: "true"
        RELEASE_VERSION: 6.6.0
    container_name: explorer
    command: |
      sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" &&
      bin/blockscout start"
    env_file:
      - ./explorer/.env
    ports:
      - 4000:4000
    depends_on:
      - explorer-db
      - node2
    networks:
      - default
      - node-net

volumes:
  explorer_data:
  signer1:
  signer2:
  node1:
  node2:

networks:
  node-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.254.0/24
